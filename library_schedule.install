<?php
/**
 * Implements hook_enable().
 */
function library_schedule_enable() {
    node_types_rebuild();
    library_schedule_add_taxonomy();
    library_schedule_add_fields();
    
}
/**
 * Implements hook_install().
 */
function library_schedule_install() {
    variable_set('library_schedule_default_open','7:30am');
    variable_set('library_schedule_default_close','10:00pm');
}
/**
 * Implements hook_uninstall().
 */
function library_schedule_uninstall() {
    $entries = node_load_multiple(array(),array('type'=>'library_schedule_entry'));
    foreach($entries as $node) {
        node_delete($node->nid);
    }
    
    $exceptions = node_load_multiple(array(),array('type'=>'library_schedule_exception'));
    foreach($exceptions as $node) {
        node_delete($node->nid);
    }
    
    library_schedule_delete_fields();
    node_type_delete('library_schedule_entry');
    node_type_delete('library_schedule_exception');
    library_schedule_delete_taxonomy();
    variable_del('library_schedule_default_open');
    variable_del('library_schedule_default_close');
    field_purge_batch(1000);
}

/**
 * Add Fields for library schedule entry
 */
function library_schedule_entry_add_fields() {
   $t = get_t();
    
    $fields = array();
    //Start and End date for an entry
    $fields['lhe_start_date'] = array(
        'field_name' => 'lhe_start_date',
        'type' => 'text',
        'required' => TRUE,
    );
    
    $fields['lhe_end_date'] = array(
        'field_name' => 'lhe_end_date',
        'type' => 'text',
        'required' => TRUE,
    );
    //Monday Hours
    $fields['lhe_monday_hours_open'] = array(
        'field_name' => 'lhe_monday_hours_open',
        'type' => 'text',
    );
    $fields['lhe_monday_hours_close'] = array(
        'field_name' => 'lhe_monday_hours_close',
        'type' => 'text',
    );
    
    //Tuesday Hours
    $fields['lhe_tuesday_hours_open'] = array(
        'field_name' => 'lhe_tuesday_hours_open',
        'type' => 'text',
    );
    $fields['lhe_tuesday_hours_close'] = array(
        'field_name' => 'lhe_tuesday_hours_close',
        'type' => 'text',
    );
    
    //Wednesday Hours
    $fields['lhe_wednesday_hours_open'] = array(
        'field_name' => 'lhe_wednesday_hours_open',
        'type' => 'text',
    );
    $fields['lhe_wednesday_hours_close'] = array(
        'field_name' => 'lhe_wednesday_hours_close',
        'type' => 'text',
    );
    
    //Thursday Hours
    $fields['lhe_thursday_hours_open'] = array(
        'field_name' => 'lhe_thursday_hours_open',
        'type' => 'text',
    );
    $fields['lhe_thursday_hours_close'] = array(
        'field_name' => 'lhe_thursday_hours_close',
        'type' => 'text',
    );
    
    //Friday Hours
    $fields['lhe_friday_hours_open'] = array(
        'field_name' => 'lhe_friday_hours_open',
        'type' => 'text',
    );
    $fields['lhe_friday_hours_close'] = array(
        'field_name' => 'lhe_friday_hours_close',
        'type' => 'text',
    );
    
    //Saturday Hours
    $fields['lhe_saturday_hours_open'] = array(
        'field_name' => 'lhe_saturday_hours_open',
        'type' => 'text',
    );
    $fields['lhe_saturday_hours_close'] = array(
        'field_name' => 'lhe_saturday_hours_close',
        'type' => 'text',
    );
    
    //Sunday Hours
    $fields['lhe_sunday_hours_open'] = array(
        'field_name' => 'lhe_sunday_hours_open',
        'type' => 'text',
    );
    $fields['lhe_sunday_hours_close'] = array(
        'field_name' => 'lhe_sunday_hours_close',
        'type' => 'text',
    );
    
   //Add fields for library schedule entry
    foreach ($fields as $field) {
        field_create_field($field);
    }
    
    //Start and End date for an entry
    $fields['lhe_start_date'] = array(
        'field_name' => 'lhe_start_date',
        'type' => 'text',
        'required' => TRUE,
        'label' => $t('Start Date'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
    );
    
    $fields['lhe_end_date'] = array(
        'field_name' => 'lhe_end_date',
        'type' => 'text',
        'required' => TRUE,
        'label' => $t('End Date'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
    );
    
    $fields['library_schedule_group'] = array(
        'field_name' => 'library_schedule_group',
        'label' => $t('Group'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
        'widget' => array(
            'type' => 'options_select',
        ),
        'display' => array(
            'default' => array('type'=>'hidden'),
            'teaser' => array('type'=>'hidden'),
        ),
    );
    
    //Monday Hours
    $fields['lhe_monday_hours_open'] = array(
        'field_name' => 'lhe_monday_hours_open',
        'type' => 'text',
        'label' => $t('Monday Opening Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    $fields['lhe_monday_hours_close'] = array(
        'field_name' => 'lhe_monday_hours_close',
        'type' => 'text',
        'label' => $t('Monday Closing Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    
    //Tuesday Hours
    $fields['lhe_tuesday_hours_open'] = array(
        'field_name' => 'lhe_tuesday_hours_open',
        'type' => 'text',
        'label' => $t('Tuesday Opening Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    $fields['lhe_tuesday_hours_close'] = array(
        'field_name' => 'lhe_tuesday_hours_close',
        'type' => 'text',
        'label' => $t('Tuesday Closing Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    
    //Wednesday Hours
    $fields['lhe_wednesday_hours_open'] = array(
        'field_name' => 'lhe_wednesday_hours_open',
        'type' => 'text',
        'label' => $t('Wednesday Opening Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    $fields['lhe_wednesday_hours_close'] = array(
        'field_name' => 'lhe_wednesday_hours_close',
        'type' => 'text',
        'label' => $t('Wednesday Closing Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    
    //Thursday Hours
    $fields['lhe_thursday_hours_open'] = array(
        'field_name' => 'lhe_thursday_hours_open',
        'type' => 'text',
        'label' => $t('Thursday Opening Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    $fields['lhe_thursday_hours_close'] = array(
        'field_name' => 'lhe_thursday_hours_close',
        'type' => 'text',
        'label' => $t('Thursday Closing Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    
    //Friday Hours
    $fields['lhe_friday_hours_open'] = array(
        'field_name' => 'lhe_friday_hours_open',
        'type' => 'text',
        'label' => $t('Friday Opening Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    $fields['lhe_friday_hours_close'] = array(
        'field_name' => 'lhe_friday_hours_close',
        'type' => 'text',
        'label' => $t('Friday Closing Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    
    //Saturday Hours
    $fields['lhe_saturday_hours_open'] = array(
        'field_name' => 'lhe_saturday_hours_open',
        'type' => 'text',
        'label' => $t('Saturday Opening Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    $fields['lhe_saturday_hours_close'] = array(
        'field_name' => 'lhe_saturday_hours_close',
        'type' => 'text',
        'label' => $t('Saturday Closing Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    
    //Sunday Hours
    $fields['lhe_sunday_hours_open'] = array(
        'field_name' => 'lhe_sunday_hours_open',
        'type' => 'text',
        'label' => $t('Sunday Opening Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    $fields['lhe_sunday_hours_close'] = array(
        'field_name' => 'lhe_sunday_hours_close',
        'type' => 'text',
        'label' => $t('Sunday Closing Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'required' => TRUE,
    );
    
    foreach ($fields as $field) {
        field_create_instance($field);
    }
}

/**
 * Add Fields for library schedule exception
 */
function library_schedule_exception_add_fields() {
    $t = get_t();
    $fields = array();
        
    $fields['lhe_exception_start_date'] = array(
        'field_name' => 'lhe_exception_start_date',
        'type' => 'text',
    );
    
    $fields['lhe_exception_end_date'] = array(
        'field_name' => 'lhe_exception_end_date',
        'type' => 'text',
    );
    
    $fields['lhe_exception_open'] = array(
        'field_name' => 'lhe_exception_open',
        'type' => 'text',
    );
    
    $fields['lhe_exception_close'] = array(
        'field_name' => 'lhe_exception_close',
        'type' => 'text',
    );
    
    //Add fields for library schedule exception
    foreach ($fields as $field) {
        field_create_field($field);
    }
    
    $fields['lhe_exception_start_date'] = array(
        'field_name' => 'lhe_exception_start_date',
        'label' => $t('Exception Start Date'),
        'required' => TRUE,
        'entity_type' => 'node',
        'bundle' => 'library_schedule_exception',
    );
    
    $fields['lhe_exception_end_date'] = array(
        'field_name' => 'lhe_exception_end_date',
        'label' => $t('Exception End Date'),
        'required' => TRUE,
        'entity_type' => 'node',
        'bundle' => 'library_schedule_exception',
    );
    
    
    $fields['library_schedule_group'] = array(
        'field_name' => 'library_schedule_group',
        'label' => $t('Group'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_exception',
        'required' => TRUE,
        'widget' => array(
            'type' => 'options_select',
        ),
        'display' => array(
            'default' => array('type'=>'hidden'),
            'teaser' => array('type'=>'hidden'),
        ),
    );
    
    $fields['lhe_exception_open'] = array(
        'field_name' => 'lhe_exception_open',
        'label' => $t('Opening Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_exception',
        'default_value' => array(array('value' => 'Closed'),),
        'required' => TRUE,
    );
    $fields['lhe_exception_close'] = array(
        'field_name' => 'lhe_exception_close',
        'label' => $t('Closing Time'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_exception',
        'default_value' => array(array('value' => 'Closed'),),
        'required' => TRUE,
    );
    
    foreach ($fields as $field) {
        field_create_instance($field);
    }
}

/**
 * Adds defined fields to library schedule content type
 */
function library_schedule_add_fields() {
    library_schedule_add_group_field();
    library_schedule_add_weight_field();
    library_schedule_entry_add_fields();
    library_schedule_exception_add_fields();
}

/**
 * Add weight field to both node types.
 */
function library_schedule_add_weight_field() {
    $t = get_t();
    $field = array(
        'field_name' => 'library_schedule_weight',
        'type' => 'list_integer',
        'settings' => array(
            'allowed_values' => array(
                0 => 'First',
                1 => 'Second',
                2 => 'Third',
                3 => 'Fourth',
                4 => 'Fifth',
                5 => 'Sixth',
            ),
        ),
    );
    field_create_field($field);

    $field_instance['entry'] = array(
        'field_name' => 'library_schedule_weight',
        'label' => $t('List Order'),
        'description' => $t('The order by which the entry is listed.'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_entry',
        'default_value' => array(array('value' => 0),),
        'required' => TRUE,
    );
    
    $field_instance['exception'] = array(
        'field_name' => 'library_schedule_weight',
        'label' => $t('List Order'),
        'description' => $t('The order by which the exception is listed.'),
        'entity_type' => 'node',
        'bundle' => 'library_schedule_exception',
        'default_value' => array(array('value' => 0),),
        'required' => TRUE,
    );
    
    foreach($field_instance as $instance) {
        field_create_instance($instance);
    }
}

/**
 * Add the library schedule group taxonomy field to both node types.
 */
function library_schedule_add_group_field() {
    $field = array(
        'field_name' => 'library_schedule_group',
        'type' => 'taxonomy_term_reference',
        'settings' => array(
            'allowed_values' => array(
                array(
                    'vocabulary' => 'lh_group',
                    'parent' => 0,
                ),
            ),
        ),
    );
    field_create_field($field);
}
/**
 * Delete the added fields
 */
function library_schedule_delete_fields() {
    $field_entries = array(
        'lhe_start_date',
        'lhe_end_date',
        'lhe_monday_hours_open',
        'lhe_monday_hours_close',
        'lhe_tuesday_hours_open',
        'lhe_tuesday_hours_close',
        'lhe_wednesday_hours_open',
        'lhe_wednesday_hours_close',
        'lhe_thursday_hours_open',
        'lhe_thursday_hours_close',
        'lhe_friday_hours_open',
        'lhe_friday_hours_close',
        'lhe_saturday_hours_open',
        'lhe_saturday_hours_close',
        'lhe_sunday_hours_open',
        'lhe_sunday_hours_close',
    );
    $field_instances = field_info_instances('node', 'library_schedule_entry');
    
    $field_exceptions = array(
        'lhe_exception_start_date',
        'lhe_exception_end_date',
        'lhe_exception_open',
        'lhe_exception_close',
        );
    $field_instances_exception = 
            field_info_instances('node', 'library_schedule_exception');
    
    //Delete library schedule Group Field
    field_delete_field('library_schedule_group');
    
    //Delete library schedule weight
    field_delete_field('library_schedule_weight');
    
    //Delete fields for library schedule entry
    foreach($field_entries as $field) {
        field_delete_field($field);
    }
    foreach($field_instances as $instance_name => $field_instance) {
        field_delete_instance($field_instance);
    }
    
    //Delete fields for library schedule exception
    foreach($field_exceptions as $field) {
        field_delete_field($field);
    }
    foreach($field_instances_exception as $instance_name => $field_instance) {
        field_delete_instance($field_instance);
    }
    
}

/**
 * Add the library schedule Group vocabulary with 3 terms.
 */
function library_schedule_add_taxonomy() {
    $vocab = new stdClass();
    $vocab->name = 'library schedule Group';
    $vocab->machine_name = 'lh_group';
    $vocab->description = t('How library schedule entries and exceptions are grouped');
    $vocab->hierarchy = 1;
    taxonomy_vocabulary_save($vocab);
    
    $lh_group = taxonomy_vocabulary_machine_name_load('lh_group');
    // Add Fall Group
    $term_fall = new stdClass();
    $term_fall->vid = $lh_group->vid;
    $term_fall->name = 'Fall';
    $term_fall->weight = 0;
    taxonomy_term_save($term_fall);
    
    // Add Fall Break Group
    $term_fall_break = new stdClass();
    $term_fall_break->vid = $lh_group->vid;
    $term_fall_break->name = 'Fall Break';
    $term_fall_break->weight = 1;
    taxonomy_term_save($term_fall_break);
    
    // Add Fall Finals Group
    $term_fall_finals = new stdClass();
    $term_fall_finals->vid = $lh_group->vid;
    $term_fall_finals->name = 'Fall Finals';
    $term_fall_finals->weight = 2;
    taxonomy_term_save($term_fall_finals);
    
    // Add Spring Group
    $term_spring = new stdClass();
    $term_spring->vid = $lh_group->vid;
    $term_spring->name = 'Spring';
    $term_spring->weight = 3;
    taxonomy_term_save($term_spring);
    
    // Add Spring Break Group
    $term_spring_break = new stdClass();
    $term_spring_break->vid = $lh_group->vid;
    $term_spring_break->name = 'Spring Break';
    $term_spring_break->weight = 4;
    taxonomy_term_save($term_spring_break);
    
    // Add Spring Finals Group
    $term_spring_finals = new stdClass();
    $term_spring_finals->vid = $lh_group->vid;
    $term_spring_finals->name = 'Spring Finals';
    $term_spring_finals->weight = 5;
    taxonomy_term_save($term_spring_finals);
    
    // Add Summer Group
    $term_summer = new stdClass();
    $term_summer->vid = $lh_group->vid;
    $term_summer->name = 'Summer';
    $term_summer->weight = 6;
    taxonomy_term_save($term_summer);
    
    // Add Summer Break Group
    $term_summer_break = new stdClass();
    $term_summer_break->vid = $lh_group->vid;
    $term_summer_break->name = 'Summer Break';
    $term_summer_break->weight = 7;
    taxonomy_term_save($term_summer_break);
    
    // Add Summer Finals Group
    $term_summer_finals = new stdClass();
    $term_summer_finals->vid = $lh_group->vid;
    $term_summer_finals->name = 'Summer Finals';
    $term_summer_finals->weight = 8;
    taxonomy_term_save($term_summer_finals);
    
    // Add Intersession Group
    $term_intersession = new stdClass();
    $term_intersession->vid = $lh_group->vid;
    $term_intersession->name = 'Intersession';
    $term_intersession->weight = 9;
    taxonomy_term_save($term_intersession);
    
    
}

function library_schedule_delete_taxonomy() {
    $vocab = taxonomy_vocabulary_machine_name_load('lh_group');
    $terms = taxonomy_term_load_multiple(array(), array('vid' => $vocab->vid));
    foreach ($terms as $term) {
        taxonomy_term_delete($term->tid);
    }
    taxonomy_vocabulary_delete($vocab->vid);
}